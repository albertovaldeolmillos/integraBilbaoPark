//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace integraMobile.ExternalWS.MeyparPICWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PIC_WSSoap", Namespace="http://tempuri.org/")]
    public partial class PIC_WS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ExternalAlarmParkingmeterOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExternalAlarmParkingmeterJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExternalParkingmeterStatusNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExternalParkingmeterStatusNotificationJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExternalCollectingParkingmeterOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExternalCollectingParkingmeterJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExternalTicketPaymentParkingmeterOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExternalTicketPaymentParkingmeterJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExternalMeasuresParkingmeterOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExternalMeasuresParkingmeterJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback iParkTicketSecurityAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback iParkTicketSecurityAuthenticationJSONOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PIC_WS() {
            this.Url = global::integraMobile.ExternalWS.Properties.Settings.Default.integraMobile_ExternalWS_MeyparPICWS_PIC_WS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ExternalAlarmParkingmeterCompletedEventHandler ExternalAlarmParkingmeterCompleted;
        
        /// <remarks/>
        public event ExternalAlarmParkingmeterJSONCompletedEventHandler ExternalAlarmParkingmeterJSONCompleted;
        
        /// <remarks/>
        public event ExternalParkingmeterStatusNotificationCompletedEventHandler ExternalParkingmeterStatusNotificationCompleted;
        
        /// <remarks/>
        public event ExternalParkingmeterStatusNotificationJSONCompletedEventHandler ExternalParkingmeterStatusNotificationJSONCompleted;
        
        /// <remarks/>
        public event ExternalCollectingParkingmeterCompletedEventHandler ExternalCollectingParkingmeterCompleted;
        
        /// <remarks/>
        public event ExternalCollectingParkingmeterJSONCompletedEventHandler ExternalCollectingParkingmeterJSONCompleted;
        
        /// <remarks/>
        public event ExternalTicketPaymentParkingmeterCompletedEventHandler ExternalTicketPaymentParkingmeterCompleted;
        
        /// <remarks/>
        public event ExternalTicketPaymentParkingmeterJSONCompletedEventHandler ExternalTicketPaymentParkingmeterJSONCompleted;
        
        /// <remarks/>
        public event ExternalMeasuresParkingmeterCompletedEventHandler ExternalMeasuresParkingmeterCompleted;
        
        /// <remarks/>
        public event ExternalMeasuresParkingmeterJSONCompletedEventHandler ExternalMeasuresParkingmeterJSONCompleted;
        
        /// <remarks/>
        public event iParkTicketSecurityAuthenticationCompletedEventHandler iParkTicketSecurityAuthenticationCompleted;
        
        /// <remarks/>
        public event iParkTicketSecurityAuthenticationJSONCompletedEventHandler iParkTicketSecurityAuthenticationJSONCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExternalAlarmParkingmeter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExternalAlarmParkingmeter(string xmlIn) {
            object[] results = this.Invoke("ExternalAlarmParkingmeter", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExternalAlarmParkingmeterAsync(string xmlIn) {
            this.ExternalAlarmParkingmeterAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void ExternalAlarmParkingmeterAsync(string xmlIn, object userState) {
            if ((this.ExternalAlarmParkingmeterOperationCompleted == null)) {
                this.ExternalAlarmParkingmeterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExternalAlarmParkingmeterOperationCompleted);
            }
            this.InvokeAsync("ExternalAlarmParkingmeter", new object[] {
                        xmlIn}, this.ExternalAlarmParkingmeterOperationCompleted, userState);
        }
        
        private void OnExternalAlarmParkingmeterOperationCompleted(object arg) {
            if ((this.ExternalAlarmParkingmeterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExternalAlarmParkingmeterCompleted(this, new ExternalAlarmParkingmeterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExternalAlarmParkingmeterJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExternalAlarmParkingmeterJSON(string jsonIn) {
            object[] results = this.Invoke("ExternalAlarmParkingmeterJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExternalAlarmParkingmeterJSONAsync(string jsonIn) {
            this.ExternalAlarmParkingmeterJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void ExternalAlarmParkingmeterJSONAsync(string jsonIn, object userState) {
            if ((this.ExternalAlarmParkingmeterJSONOperationCompleted == null)) {
                this.ExternalAlarmParkingmeterJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExternalAlarmParkingmeterJSONOperationCompleted);
            }
            this.InvokeAsync("ExternalAlarmParkingmeterJSON", new object[] {
                        jsonIn}, this.ExternalAlarmParkingmeterJSONOperationCompleted, userState);
        }
        
        private void OnExternalAlarmParkingmeterJSONOperationCompleted(object arg) {
            if ((this.ExternalAlarmParkingmeterJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExternalAlarmParkingmeterJSONCompleted(this, new ExternalAlarmParkingmeterJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExternalParkingmeterStatusNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExternalParkingmeterStatusNotification(string xmlIn) {
            object[] results = this.Invoke("ExternalParkingmeterStatusNotification", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExternalParkingmeterStatusNotificationAsync(string xmlIn) {
            this.ExternalParkingmeterStatusNotificationAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void ExternalParkingmeterStatusNotificationAsync(string xmlIn, object userState) {
            if ((this.ExternalParkingmeterStatusNotificationOperationCompleted == null)) {
                this.ExternalParkingmeterStatusNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExternalParkingmeterStatusNotificationOperationCompleted);
            }
            this.InvokeAsync("ExternalParkingmeterStatusNotification", new object[] {
                        xmlIn}, this.ExternalParkingmeterStatusNotificationOperationCompleted, userState);
        }
        
        private void OnExternalParkingmeterStatusNotificationOperationCompleted(object arg) {
            if ((this.ExternalParkingmeterStatusNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExternalParkingmeterStatusNotificationCompleted(this, new ExternalParkingmeterStatusNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExternalParkingmeterStatusNotificationJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExternalParkingmeterStatusNotificationJSON(string jsonIn) {
            object[] results = this.Invoke("ExternalParkingmeterStatusNotificationJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExternalParkingmeterStatusNotificationJSONAsync(string jsonIn) {
            this.ExternalParkingmeterStatusNotificationJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void ExternalParkingmeterStatusNotificationJSONAsync(string jsonIn, object userState) {
            if ((this.ExternalParkingmeterStatusNotificationJSONOperationCompleted == null)) {
                this.ExternalParkingmeterStatusNotificationJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExternalParkingmeterStatusNotificationJSONOperationCompleted);
            }
            this.InvokeAsync("ExternalParkingmeterStatusNotificationJSON", new object[] {
                        jsonIn}, this.ExternalParkingmeterStatusNotificationJSONOperationCompleted, userState);
        }
        
        private void OnExternalParkingmeterStatusNotificationJSONOperationCompleted(object arg) {
            if ((this.ExternalParkingmeterStatusNotificationJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExternalParkingmeterStatusNotificationJSONCompleted(this, new ExternalParkingmeterStatusNotificationJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExternalCollectingParkingmeter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExternalCollectingParkingmeter(string xmlIn) {
            object[] results = this.Invoke("ExternalCollectingParkingmeter", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExternalCollectingParkingmeterAsync(string xmlIn) {
            this.ExternalCollectingParkingmeterAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void ExternalCollectingParkingmeterAsync(string xmlIn, object userState) {
            if ((this.ExternalCollectingParkingmeterOperationCompleted == null)) {
                this.ExternalCollectingParkingmeterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExternalCollectingParkingmeterOperationCompleted);
            }
            this.InvokeAsync("ExternalCollectingParkingmeter", new object[] {
                        xmlIn}, this.ExternalCollectingParkingmeterOperationCompleted, userState);
        }
        
        private void OnExternalCollectingParkingmeterOperationCompleted(object arg) {
            if ((this.ExternalCollectingParkingmeterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExternalCollectingParkingmeterCompleted(this, new ExternalCollectingParkingmeterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExternalCollectingParkingmeterJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExternalCollectingParkingmeterJSON(string jsonIn) {
            object[] results = this.Invoke("ExternalCollectingParkingmeterJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExternalCollectingParkingmeterJSONAsync(string jsonIn) {
            this.ExternalCollectingParkingmeterJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void ExternalCollectingParkingmeterJSONAsync(string jsonIn, object userState) {
            if ((this.ExternalCollectingParkingmeterJSONOperationCompleted == null)) {
                this.ExternalCollectingParkingmeterJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExternalCollectingParkingmeterJSONOperationCompleted);
            }
            this.InvokeAsync("ExternalCollectingParkingmeterJSON", new object[] {
                        jsonIn}, this.ExternalCollectingParkingmeterJSONOperationCompleted, userState);
        }
        
        private void OnExternalCollectingParkingmeterJSONOperationCompleted(object arg) {
            if ((this.ExternalCollectingParkingmeterJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExternalCollectingParkingmeterJSONCompleted(this, new ExternalCollectingParkingmeterJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExternalTicketPaymentParkingmeter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExternalTicketPaymentParkingmeter(string xmlIn) {
            object[] results = this.Invoke("ExternalTicketPaymentParkingmeter", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExternalTicketPaymentParkingmeterAsync(string xmlIn) {
            this.ExternalTicketPaymentParkingmeterAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void ExternalTicketPaymentParkingmeterAsync(string xmlIn, object userState) {
            if ((this.ExternalTicketPaymentParkingmeterOperationCompleted == null)) {
                this.ExternalTicketPaymentParkingmeterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExternalTicketPaymentParkingmeterOperationCompleted);
            }
            this.InvokeAsync("ExternalTicketPaymentParkingmeter", new object[] {
                        xmlIn}, this.ExternalTicketPaymentParkingmeterOperationCompleted, userState);
        }
        
        private void OnExternalTicketPaymentParkingmeterOperationCompleted(object arg) {
            if ((this.ExternalTicketPaymentParkingmeterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExternalTicketPaymentParkingmeterCompleted(this, new ExternalTicketPaymentParkingmeterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExternalTicketPaymentParkingmeterJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExternalTicketPaymentParkingmeterJSON(string jsonIn) {
            object[] results = this.Invoke("ExternalTicketPaymentParkingmeterJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExternalTicketPaymentParkingmeterJSONAsync(string jsonIn) {
            this.ExternalTicketPaymentParkingmeterJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void ExternalTicketPaymentParkingmeterJSONAsync(string jsonIn, object userState) {
            if ((this.ExternalTicketPaymentParkingmeterJSONOperationCompleted == null)) {
                this.ExternalTicketPaymentParkingmeterJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExternalTicketPaymentParkingmeterJSONOperationCompleted);
            }
            this.InvokeAsync("ExternalTicketPaymentParkingmeterJSON", new object[] {
                        jsonIn}, this.ExternalTicketPaymentParkingmeterJSONOperationCompleted, userState);
        }
        
        private void OnExternalTicketPaymentParkingmeterJSONOperationCompleted(object arg) {
            if ((this.ExternalTicketPaymentParkingmeterJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExternalTicketPaymentParkingmeterJSONCompleted(this, new ExternalTicketPaymentParkingmeterJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExternalMeasuresParkingmeter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExternalMeasuresParkingmeter(string xmlIn) {
            object[] results = this.Invoke("ExternalMeasuresParkingmeter", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExternalMeasuresParkingmeterAsync(string xmlIn) {
            this.ExternalMeasuresParkingmeterAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void ExternalMeasuresParkingmeterAsync(string xmlIn, object userState) {
            if ((this.ExternalMeasuresParkingmeterOperationCompleted == null)) {
                this.ExternalMeasuresParkingmeterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExternalMeasuresParkingmeterOperationCompleted);
            }
            this.InvokeAsync("ExternalMeasuresParkingmeter", new object[] {
                        xmlIn}, this.ExternalMeasuresParkingmeterOperationCompleted, userState);
        }
        
        private void OnExternalMeasuresParkingmeterOperationCompleted(object arg) {
            if ((this.ExternalMeasuresParkingmeterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExternalMeasuresParkingmeterCompleted(this, new ExternalMeasuresParkingmeterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExternalMeasuresParkingmeterJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExternalMeasuresParkingmeterJSON(string jsonIn) {
            object[] results = this.Invoke("ExternalMeasuresParkingmeterJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExternalMeasuresParkingmeterJSONAsync(string jsonIn) {
            this.ExternalMeasuresParkingmeterJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void ExternalMeasuresParkingmeterJSONAsync(string jsonIn, object userState) {
            if ((this.ExternalMeasuresParkingmeterJSONOperationCompleted == null)) {
                this.ExternalMeasuresParkingmeterJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExternalMeasuresParkingmeterJSONOperationCompleted);
            }
            this.InvokeAsync("ExternalMeasuresParkingmeterJSON", new object[] {
                        jsonIn}, this.ExternalMeasuresParkingmeterJSONOperationCompleted, userState);
        }
        
        private void OnExternalMeasuresParkingmeterJSONOperationCompleted(object arg) {
            if ((this.ExternalMeasuresParkingmeterJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExternalMeasuresParkingmeterJSONCompleted(this, new ExternalMeasuresParkingmeterJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/iParkTicketSecurityAuthentication", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string iParkTicketSecurityAuthentication(string xmlIn) {
            object[] results = this.Invoke("iParkTicketSecurityAuthentication", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void iParkTicketSecurityAuthenticationAsync(string xmlIn) {
            this.iParkTicketSecurityAuthenticationAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void iParkTicketSecurityAuthenticationAsync(string xmlIn, object userState) {
            if ((this.iParkTicketSecurityAuthenticationOperationCompleted == null)) {
                this.iParkTicketSecurityAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OniParkTicketSecurityAuthenticationOperationCompleted);
            }
            this.InvokeAsync("iParkTicketSecurityAuthentication", new object[] {
                        xmlIn}, this.iParkTicketSecurityAuthenticationOperationCompleted, userState);
        }
        
        private void OniParkTicketSecurityAuthenticationOperationCompleted(object arg) {
            if ((this.iParkTicketSecurityAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.iParkTicketSecurityAuthenticationCompleted(this, new iParkTicketSecurityAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/iParkTicketSecurityAuthenticationJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string iParkTicketSecurityAuthenticationJSON(string jsonIn) {
            object[] results = this.Invoke("iParkTicketSecurityAuthenticationJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void iParkTicketSecurityAuthenticationJSONAsync(string jsonIn) {
            this.iParkTicketSecurityAuthenticationJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void iParkTicketSecurityAuthenticationJSONAsync(string jsonIn, object userState) {
            if ((this.iParkTicketSecurityAuthenticationJSONOperationCompleted == null)) {
                this.iParkTicketSecurityAuthenticationJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OniParkTicketSecurityAuthenticationJSONOperationCompleted);
            }
            this.InvokeAsync("iParkTicketSecurityAuthenticationJSON", new object[] {
                        jsonIn}, this.iParkTicketSecurityAuthenticationJSONOperationCompleted, userState);
        }
        
        private void OniParkTicketSecurityAuthenticationJSONOperationCompleted(object arg) {
            if ((this.iParkTicketSecurityAuthenticationJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.iParkTicketSecurityAuthenticationJSONCompleted(this, new iParkTicketSecurityAuthenticationJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExternalAlarmParkingmeterCompletedEventHandler(object sender, ExternalAlarmParkingmeterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExternalAlarmParkingmeterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExternalAlarmParkingmeterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExternalAlarmParkingmeterJSONCompletedEventHandler(object sender, ExternalAlarmParkingmeterJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExternalAlarmParkingmeterJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExternalAlarmParkingmeterJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExternalParkingmeterStatusNotificationCompletedEventHandler(object sender, ExternalParkingmeterStatusNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExternalParkingmeterStatusNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExternalParkingmeterStatusNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExternalParkingmeterStatusNotificationJSONCompletedEventHandler(object sender, ExternalParkingmeterStatusNotificationJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExternalParkingmeterStatusNotificationJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExternalParkingmeterStatusNotificationJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExternalCollectingParkingmeterCompletedEventHandler(object sender, ExternalCollectingParkingmeterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExternalCollectingParkingmeterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExternalCollectingParkingmeterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExternalCollectingParkingmeterJSONCompletedEventHandler(object sender, ExternalCollectingParkingmeterJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExternalCollectingParkingmeterJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExternalCollectingParkingmeterJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExternalTicketPaymentParkingmeterCompletedEventHandler(object sender, ExternalTicketPaymentParkingmeterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExternalTicketPaymentParkingmeterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExternalTicketPaymentParkingmeterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExternalTicketPaymentParkingmeterJSONCompletedEventHandler(object sender, ExternalTicketPaymentParkingmeterJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExternalTicketPaymentParkingmeterJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExternalTicketPaymentParkingmeterJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExternalMeasuresParkingmeterCompletedEventHandler(object sender, ExternalMeasuresParkingmeterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExternalMeasuresParkingmeterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExternalMeasuresParkingmeterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExternalMeasuresParkingmeterJSONCompletedEventHandler(object sender, ExternalMeasuresParkingmeterJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExternalMeasuresParkingmeterJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExternalMeasuresParkingmeterJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void iParkTicketSecurityAuthenticationCompletedEventHandler(object sender, iParkTicketSecurityAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class iParkTicketSecurityAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal iParkTicketSecurityAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void iParkTicketSecurityAuthenticationJSONCompletedEventHandler(object sender, iParkTicketSecurityAuthenticationJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class iParkTicketSecurityAuthenticationJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal iParkTicketSecurityAuthenticationJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591